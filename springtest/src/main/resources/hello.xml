<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- id 表示你这个组件的名字，class表示组件类 -->
    <bean id="hello" class="com.example.springtest.demo.TestDemoService"></bean>

    <!--使用默认构造参数-->
    <!--id 和 name 都可以作为标识符，如果id和name同时存在，那么id就是标识符 name就是别名-->
    <bean id="hell1" name="he" class="com.example.springtest.demo.TestDemoService"></bean>

    <!--使用<alias>标签指定别名，别名也必须在IoC容器中唯一
    name  bean表示
    alias  设置的别名
    -->
    <alias name="hello" alias="ddd1"/>



    <bean id="tets1" class="com.example.springtest.demo.StudentService">
        <!-- 指定构造器参数 -->
        <constructor-arg index="0" value="hello wkn"/>
    </bean>


    <!-- 使用静态工厂方法 -->
    <bean id="bean3" class="com.example.springtest.bean.FactoryBean" factory-method="newInstance">
        <constructor-arg index="0" value="Hello Spring!"/>
    </bean>



    <!--1、定义实例工厂Bean -->
    <bean id="beanInstanceFactory"
          class="com.example.springtest.bean.FactoryBeanApi"/>
    <!--2、使用实例工厂Bean创建Bean -->
    <bean id="user0" class="com.example.springtest.pojo.User">
        <property name="id" value="12"></property>
    </bean>



    <!--
        set注入
        通过set方法，将需要初始化的值进行赋值
        name  需要赋值的参数名称
        value 需要的值
    -->
    <bean id="persion11" class="com.example.springtest.pojo.Persion">
        <property name="name" value="dd"></property>
        <property name="car" ref="car1"></property>
    </bean>




    <bean id="bean4"
          factory-bean="beanInstanceFactory"
          factory-method="newIntance">
        <constructor-arg index="0" value="Hello Spring!"></constructor-arg>
    </bean>


    <!--构造方法注入
           index="0"   构造方法中参数位置
           value="dd"  属性值
           type="java.lang.String"  属性的类型   可以区分重载的构造器
    -->
    <bean id="use1" class="com.example.springtest.pojo.User">
        <constructor-arg index="1" value="123" type="java.lang.Integer"></constructor-arg>
        <!--如果有特殊字符可以用CDATA[<beijing>]包裹-->
        <constructor-arg>
            <value><![CDATA[<beijing>]]></value>
        </constructor-arg>
    </bean>

    <bean id="car1" class="com.example.springtest.pojo.Car">
        <property name="carName" value="baoma"></property>
    </bean>


    <bean id="car2" class="com.example.springtest.pojo.Car">
        <property name="carName" value="benchi"></property>
    </bean>




    <!--方式一     可以使用<property name="car" ref="car1"> 完成bean之间的引用关系-->
    <bean id="persion1" class="com.example.springtest.pojo.Persion">
        <property name="name" value="dd"></property>
        <property name="car" ref="car1"></property>
    </bean>

    <!--方式一     可以使用<property name="car" ref="car1"> 完成bean之间的引用关系-->
    <bean id="persion2" class="com.example.springtest.pojo.Persion">
        <property name="name" value="dd"></property>
        <property name="car">
            <ref bean="car1"></ref>
        </property>
    </bean>


    <!--内部bean 不能被外部引用-->
    <bean id="persion23" class="com.example.springtest.pojo.Persion">
        <property name="name" value="dd"></property>
        <property name="car">
            <bean class="com.example.springtest.pojo.Car">
                <constructor-arg name="carName" value="dd"></constructor-arg>
            </bean>
        </property>
    </bean>



    <util:list id="cars">
        <ref bean="car1"/>
        <ref bean="car2"/>
    </util:list>




    <bean id="car01" class="com.example.springtest.pojo.Car">
        <property name="carName" value="test01"></property>
    </bean>

    <bean id="address01" class="com.example.springtest.pojo.Address">
        <property name="name" value="sd"></property>
        <property name="id" value="11"></property>
    </bean>






























</beans>