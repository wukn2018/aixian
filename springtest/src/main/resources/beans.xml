<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">




    <!--
    abstract="true"
    抽象bean  bean的abstract属性为true 的bean 这样的bean不能被IOC容器实例化，只用用来被继承配置
    若某一个bean的 class 属性没有被指定，则该bean必须是一个抽象bean
    -->
    <bean id="car00" class="com.example.springtest.pojo.Car">
        <property name="carName" value="ddd"></property>
    </bean>


    <!-- parent="car00"
    bean 配置的继承  使用bean的parent属性指定继承哪个bean的配置-->
    <bean id="address00" class="com.example.springtest.pojo.Address">
        <property name="id" value="1"></property>
        <property name="name" value="d"></property>
    </bean>



    <!--depends-on="car00"  表示在配置一个bean时，必须依赖car的bean、否则会出错
    要求在配置persion时，必须有car。必须依赖car的bean-->
    <bean id="student00" class="com.example.springtest.pojo.Persion" depends-on="car00">
        <property name="name" value="dfg"></property>
        <property name="car" ref="car00"></property>
    </bean>






    <!--
        scope="singleton"  spring创建bean默认是单例的. 创建容器时就已经创建好
        scope="prototype" 可以为原型的,意思是每次创建一个bean，spring容器会创建一个新的bean实例
    -->
    <bean id="car001" class="com.example.springtest.pojo.Car" scope="prototype">
        <property name="carName" value="ddd"></property>
    </bean>










</beans>